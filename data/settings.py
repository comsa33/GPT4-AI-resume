import yaml

# flask server
FLASK_SERVER_URL = "http://210.123.105.183:31888"  # Flask 서버의 URL을 설정합니다.

# linkedin setting
PROFILE_URL = 'https://api.linkedin.com/v2/me?projection=(id,firstName,lastName,profilePicture(displayImage~:playableStreams),emailAddress,headline,industryName,summary,location,positions,vanityName)'

# postgre credential setting
with open('credential/postgre_credentials.yaml', 'r') as file:
    cred_pg = yaml.safe_load(file)

POSTGRE_HOST = cred_pg['postgre']['host']
POSTGRE_PORT = cred_pg['postgre']['port']
POSTGRE_USERNAME = cred_pg['postgre']['username']
POSTGRE_PASSWORD = cred_pg['postgre']['password']
POSTGRE_DATABASE_1 = cred_pg['postgre']['database_1']

# gpt-4 api secret key
with open('credential/gptapi_credentials.yaml', 'r') as file:
    cred_gpt = yaml.safe_load(file)

GPT_SECRET = cred_gpt['gpt']['secret_key']

# user profile setting and prompt message setting
wanted_url_prefix = "https://www.wanted.co.kr/wd/"

user_info = [
                {
                    "fullname": "이코딩",
                    "birthday": "1988.01.01",
                    "sex": "male",
                    "mbti": "ENTJ"
                }
            ]
user_skills = [
    "python"
]
educations = [
                {
                    "name": "고려대학교대학원",
                    "major": "인공지능",
                    "start_dt": "2022.03",
                    "end_dt": "",
                    "status": "재학",
                    "kind": "석사",
                },
                {
                    "name": "고려사이버대학교",
                    "major": "인공지능",
                    "start_dt": "2019.03",
                    "end_dt": "2022.08",
                    "status": "졸업",
                    "kind": "학사"
                }
            ]
career_history = [
                    {
                        "name": "카카오",
                        "department": "Ai lab.",
                        "position": "Data Engineer",
                        "start_dt": "2022.05",
                        "end_dt": "재직중"
                    },
                    {
                        "name": "네이버",
                        "department": "Ai lab",
                        "position": "Data Analyst",
                        "start_dt": "2017.08",
                        "end_dt": "2021.08"
                    }
                ]
career_achievements = """1. 프로젝트 A: 대용량 데이터 처리 및 분석 시스템 구축 (2019년 6월 ~ 2020년 7월)
- 업무 내용: 기존 데이터 처리 및 분석 프로세스 개선을 위한 대용량 데이터 처리 및 분석 시스템 구축 프로젝트를 수행하였습니다. 데이터 파이프라인 구축, ETL 프로세스 개발, 데이터 정규화 및 정합성 검사 등의 업무를 담당하였습니다.

- 성과: 데이터 처리 시간을 40% 단축하였으며, 분석 결과의 정확도를 20% 향상시켰습니다. 이를 통해 회사의 의사결정 프로세스 개선에 기여하였습니다.

2. 프로젝트 B: 실시간 데이터 스트리밍 솔루션 개발 (2020년 9월 ~ 2021년 11월)
- 업무 내용: 고객사에 실시간 데이터 스트리밍 솔루션을 개발하였습니다. Apache Kafka와 Apache Flink를 이용한 실시간 데이터 처리 및 분석 시스템 구축, 데이터 파이프라인 최적화 등의 업무를 수행하였습니다.

- 성과: 고객사의 실시간 데이터 처리 및 분석 요구사항을 만족시키는 솔루션을 개발하여, 고객사와의 장기 계약을 체결할 수 있었습니다. 이를 통해 연간 매출의 15% 증가를 기록하였습니다.

3. 팀 관리 및 멘토링 (2019년 1월 ~ 현재)
- 업무 내용: 데이터 엔지니어링 팀의 시니어 개발자로서 팀원 관리 및 멘토링 업무를 수행하였습니다. 팀원의 업무 분담, 일정 관리, 신입 개발자 교육 및 기술 멘토링 등의 업무를 담당하였습니다.

- 성과: 팀원들의 업무 효율성과 전문성을 향상시키는데 기여하였으며, 팀 내 기술력 향상 및 프로젝트 완료 속도 향상에 이바지하였습니다. 이를 통해 전체 팀의 생산성이 25% 증가하였으며, 팀원들의 기술 역량도 향상되었습니다.

4. 빅데이터 기반 기계학습 모델 개발 (2018년 3월 ~ 2018년 12월)
- 업무 내용: 빅데이터 기반 기계학습 모델 개발 프로젝트를 수행하였습니다. 대량의 데이터를 기반으로 고객 세그먼트 분석, 고객 이탈률 예측, 상품 추천 등의 업무를 수행하였습니다.

- 성과: 기계학습 모델을 통해 고객 세그먼트를 세분화하여 마케팅 효과를 30% 향상시켰으며, 고객 이탈률을 15% 감소시켰습니다. 이를 통해 매출 증가에 기여하였습니다.

5. 기술 세미나 및 외부 활동 (2017년 ~ 현재)
- 업무 내용: 데이터 엔지니어링 및 빅데이터 관련 기술 세미나에 참여하고, 발표를 진행하였습니다. 또한, 데이터 엔지니어링 관련 커뮤니티 활동을 통해 최신 기술 동향을 파악하고, 회사 내 기술 전파에 기여하였습니다.

- 성과: 최신 기술 동향을 적용하여 프로젝트 효율성을 높이고, 회사의 데이터 엔지니어링 팀의 전문성을 강화하였습니다. 이를 통해 외부에서 인정받는 기술 선도 기업으로서의 이미지를 구축할 수 있었습니다."""

prompt_default = """회사의 가치, 문화, 비즈니스 및 기대하는 역량에 대한 이해를 토대로 작성하세요.
지나치게 길거나 어려운 문장은 피하세요. 간결하고 명확한 문장으로 긍정적인 이미지를 전달하며 읽기 쉽게 작성하세요.
개인적인 이야기와 성과를 통해 지원자의 독특한 가치를 증명할 수 있도록 작성하세요.
경험과 역량을 설명할 때 구체적인 예시를 들어서 설명하세요. 사례를 통해 지원자가 실제로 어떤 업무를 수행했는지 보여주어 신뢰성이 높은 글을 작성하세요.
존대말, 겸손한 표현 및 적절한 경어를 사용하여 전문성을 보여주세요. 지나친 자신감이나 거만한 표현은 피하세요."""

prompt_career = """
원하는 직무와 관련된 주요 역량, 스킬, 경험을 파악하세요. 직무 설명서, 채용 공고, 회사 웹사이트를 참고하며 업무와 관련된 기술 및 경험 요구사항을 반영해서 작성하세요.
직무와 관련된 핵심 역량 및 성과를 강조하는 것이 중요합니다. 업무 수행 과정에서 얻은 성과를 구체적인 수치나 예시로 설명하세요.
또한 어떤 방법과 기술을 사용했는지, 어떤 결과를 얻었는지, 어떤 역할을 했는지를 구체적으로 기술하세요.
프로젝트와 경험한 업무를 세부적으로 기술할 때는 업무와 성과를 명확하게 구분하세요. 업무는 구체적인 업무 내용을 기술하고, 성과는 업무를 통해 얻은 결과를 기술하세요.
경험에 대해서 기술할 때는 상황(Situation), 업무(Task), 행동(Action), 결과(Result)를 포함하는 구조로 작성하세요.
경력기술서는 읽기 쉽고 이해하기 쉬워야 합니다. 불필요한 정보를 제거하고, 중요한 내용을 명료하게 전달하세요. 문장은 간결하게 유지하며, 전문 용어는 풀어서 설명하세요.
"""

prompt_resume = """
워드 파일로 표를 그려 사용하고, 다음과 같은 요소들을 고려해서 작성하세요.
템플릿 선택: 깔끔하고 직관적인 템플릿을 사용하세요. 보통 한국 기업들은 1~2페이지 분량의 이력서를 선호합니다. 필요한 정보를 요약하여 표현할 수 있는 템플릿을 선택하세요.
이력서 상단에는 지원하는 회사와 직무를 추가하세요.
사진 첨부: 한국 기업에서는 이력서에 사진을 첨부하는 것이 일반적입니다. 최근 3개월 이내에 촬영한 정장 착용한 정면 사진을 사용하세요. 사진은 깔끔한 이미지와 전문성을 갖춰야 합니다.
개인 정보: 이름, 생년월일, 연락처, 이메일 주소 등의 개인 정보를 명확하게 작성하세요. 이메일 주소는 전문적인 형태로 작성하는 것이 좋습니다.
학력: 최신 학력부터 역순으로 작성하세요. 학교명, 전공, 졸업 예정 또는 졸업일 등의 정보를 포함시키세요. 관련된 학력이나 자격증도 함께 작성합니다.
경력: 경력 정보도 최신 순서대로 역순으로 작성합니다. 회사명, 근무 기간, 직책, 주요 업무 등을 기술하세요. 인턴십, 아르바이트, 프로젝트 경험 등도 포함시킬 수 있습니다.
성과 및 업무 성취: 각 경력에서 이룬 성과나 업무 성취를 구체적으로 기술하세요. 가능하다면 성과를 나타내는 숫자, 비율, 또는 달성한 목표 등으로 표현하는 것이 좋습니다.
어학 및 기타 스킬: 해당 직무와 관련된 어학 능력, 컴퓨터 기술, 인터넷 기술 등을 작성하세요. 공인 시험 점수 또는 자격증 등을 기재하여 신뢰성을 높이세요.
자기소개: 이력서 마지막 부분에 간단한 자기소개를 작성하세요. 본인의 강점, 지원 동기, 포부 등을 간결하게 표현하세요. 이 부분에서 회사가 당신을 채용하고 싶어하는 이유를 제시해야 합니다.
"""

career_achievements_tips = """
경력기술서를 효율적으로 작성하려면 다음과 같은 단계를 따르면 좋습니다:

1. **분석 및 조사**: 원하는 직무와 관련된 주요 역량, 스킬, 경험을 파악하세요. 직무 설명서, 채용 공고, 회사 웹사이트를 참고하며 업무와 관련된 기술 및 경험 요구사항을 확인하세요.

2. **목록 작성**: 자신의 경력, 학력, 자격증, 기술, 프로젝트, 수행한 업무 등을 목록으로 작성하세요. 이를 토대로 경력기술서를 작성할 내용을 정리합니다.

3. **핵심 역량 및 성과 강조**: 직무와 관련된 핵심 역량 및 성과를 강조하는 것이 중요합니다. 업무 수행 과정에서 얻은 성과를 구체적인 수치나 예시로 설명하세요.

4. **STAR 방법 사용**: 경험을 기술할 때는 상황(Situation), 업무(Task), 행동(Action), 결과(Result)를 포함하는 STAR 방법을 사용하세요. 이를 통해 구체적이고 명확한 경험 기술이 가능합니다.

5. **간결하고 명료하게 작성**: 경력기술서는 읽기 쉽고 이해하기 쉬워야 합니다. 불필요한 정보를 제거하고, 중요한 내용을 명료하게 전달하세요. 문장은 간결하게 유지하며, 전문 용어는 풀어서 설명하세요.

6. **자기소개서와의 연계**: 경력기술서와 자기소개서는 서로 보완적인 관계입니다. 두 문서가 일관성을 유지하며, 각각의 강점을 부각시키는 것이 중요합니다.

7. **교정 및 피드백**: 완성된 경력기술서를 다른 사람에게 보여주고 피드백을 받으세요. 문법, 맞춤법, 내용의 논리성 등을 확인하며 꼼꼼하게 수정하세요.

8. **지속적인 업데이트**: 경력기술서는 자주 업데이트하는 것이 좋습니다. 새로운 경험, 프로젝트, 기술 등을 적절한 시기에 추가하며, 계속해서 개선해나갑니다.
"""
